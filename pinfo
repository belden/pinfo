#!/bin/bash

export PROMPT_COMMAND=pinfo::ps1

function pinfo () {
    case $1 in
        '-ps1') pinfo::ps1 ;;
        *) pinfo::explain ;;
    esac
}

function pinfo::as_green () {
    local text=$1
    echo "\e[32;3m${text}\e[0;0m"
}

function pinfo::as_red () {
    local text=$1
    echo "\e[31;3m${text}\e[0;0m"
}

function pinfo::as_yellow () {
    local text=$1
    echo "\e[33;3m${text}\e[0;0m"
}

function pinfo::as_cyan () {
    local text=$1
    echo "\e[36;3m${text}\e[0;0m"
}

function pinfo::view::git::status::untracked () {
    local text=$1
    echo "$(pinfo::as_red $text)"
}

function pinfo::is_a_git_dir () {
    git rev-parse --show-toplevel 1> /dev/null 2>&1
    echo $?
}

function pinfo::style::underline () {
    local text=$1
    text=$(echo $1 | perl -pe 's/\[(\d+);\dm/[\1;4m/g')
    echo -e "$text\e[0;0m"
}

function pinfo::style::bold () {
    local text=$1
    text=$(echo $1 | perl -pe 's/\[(\d+);\dm/[\1;1m/g')
    echo -e "$text\e[0;0m"
}

function pinfo::view::git::repo_root () {
    local text=$1
    echo "$(pinfo::style::underline $(pinfo::as_green $text))"
}

function pinfo::view::git::branchbug::added () {
    echo "$(pinfo::as_red +)"
}

function pinfo::view::git::branchbug::modified () {
    echo "$(pinfo::as_red .)"
}

function pinfo::pwd () {
    local wd=$(pwd)

    if [[ $(pinfo::is_a_git_dir) -eq 0 ]]; then
        # if we're in a git repo, extract the basename and color it nicely
        local git_root=$(git rev-parse --show-toplevel)
        local repo_name=$(basename $git_root)
        wd=${wd/$git_root/$(pinfo::view::git::repo_root $repo_name)}
    else
        # not in a git repo: do some tidying to avoid an ever-growing `pwd` in PS1.
        wd=${wd/$HOME/\~}
    fi
    echo " $wd"
}

function pinfo::branch () {
    local branch=`__git_ps1 "%s"`;
    local branchbug=""
    # figure out what color to make the branch
    if [ -n "$branch" ]; then
        git status --porcelain | perl -ne 'exit(1) if /^ /; exit(2) if /^[?]/';
        case "$?" in 
            "0") branch="$(pinfo::as_green $branch)" ;;
            "1") branch="$(pinfo::as_red $branch)" ;;
            "2") branch="$(pinfo::view::git::status::untracked $branch)" ;;
            "130") branch="$(pinfo::as_cyan $branch)" ;;
        esac;

        git status --porcelain | perl -ne 'exit(3) if /^[A]/; exit(4) if /^\s*[M]/';
        case "$?" in 
            "3") branchbug="$(pinfo::view::git::branchbug::added)" ;;
            "4") branchbug="$(pinfo::view::git::branchbug::modified)" ;;
        esac;
        echo " ($branch)$branchbug";
        return;
    else
        return;
    fi
}

function pinfo::ps1 () {
    local exit="$?"
    local bullet_character="\342\200\242";
    case "$exit" in
        "0") bullet_character="$(pinfo::as_green $bullet_character)" ;;
        *)   bullet_character="$(pinfo::as_red $bullet_character)" ;;
    esac

    export PS1="$bullet_character [\u@\h:$(pinfo::pwd)]$(pinfo::branch) $ "
}